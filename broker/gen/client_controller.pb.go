// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_controller.proto

package erebus

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ClientControllerHandshake struct {
	ClientName           string   `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	RequestSync          bool     `protobuf:"varint,2,opt,name=request_sync,json=requestSync,proto3" json:"request_sync,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientControllerHandshake) Reset()         { *m = ClientControllerHandshake{} }
func (m *ClientControllerHandshake) String() string { return proto.CompactTextString(m) }
func (*ClientControllerHandshake) ProtoMessage()    {}
func (*ClientControllerHandshake) Descriptor() ([]byte, []int) {
	return fileDescriptor_c26ef4dddf97e5c1, []int{0}
}

func (m *ClientControllerHandshake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientControllerHandshake.Unmarshal(m, b)
}
func (m *ClientControllerHandshake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientControllerHandshake.Marshal(b, m, deterministic)
}
func (m *ClientControllerHandshake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientControllerHandshake.Merge(m, src)
}
func (m *ClientControllerHandshake) XXX_Size() int {
	return xxx_messageInfo_ClientControllerHandshake.Size(m)
}
func (m *ClientControllerHandshake) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientControllerHandshake.DiscardUnknown(m)
}

var xxx_messageInfo_ClientControllerHandshake proto.InternalMessageInfo

func (m *ClientControllerHandshake) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func (m *ClientControllerHandshake) GetRequestSync() bool {
	if m != nil {
		return m.RequestSync
	}
	return false
}

type ClientControllerHandshakeResponse struct {
	// Types that are valid to be assigned to Data:
	//	*ClientControllerHandshakeResponse_Error
	//	*ClientControllerHandshakeResponse_Ok_
	Data                 isClientControllerHandshakeResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *ClientControllerHandshakeResponse) Reset()         { *m = ClientControllerHandshakeResponse{} }
func (m *ClientControllerHandshakeResponse) String() string { return proto.CompactTextString(m) }
func (*ClientControllerHandshakeResponse) ProtoMessage()    {}
func (*ClientControllerHandshakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c26ef4dddf97e5c1, []int{1}
}

func (m *ClientControllerHandshakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientControllerHandshakeResponse.Unmarshal(m, b)
}
func (m *ClientControllerHandshakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientControllerHandshakeResponse.Marshal(b, m, deterministic)
}
func (m *ClientControllerHandshakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientControllerHandshakeResponse.Merge(m, src)
}
func (m *ClientControllerHandshakeResponse) XXX_Size() int {
	return xxx_messageInfo_ClientControllerHandshakeResponse.Size(m)
}
func (m *ClientControllerHandshakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientControllerHandshakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClientControllerHandshakeResponse proto.InternalMessageInfo

type isClientControllerHandshakeResponse_Data interface {
	isClientControllerHandshakeResponse_Data()
}

type ClientControllerHandshakeResponse_Error struct {
	Error string `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ClientControllerHandshakeResponse_Ok_ struct {
	Ok *ClientControllerHandshakeResponse_Ok `protobuf:"bytes,2,opt,name=ok,proto3,oneof"`
}

func (*ClientControllerHandshakeResponse_Error) isClientControllerHandshakeResponse_Data() {}

func (*ClientControllerHandshakeResponse_Ok_) isClientControllerHandshakeResponse_Data() {}

func (m *ClientControllerHandshakeResponse) GetData() isClientControllerHandshakeResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ClientControllerHandshakeResponse) GetError() string {
	if x, ok := m.GetData().(*ClientControllerHandshakeResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (m *ClientControllerHandshakeResponse) GetOk() *ClientControllerHandshakeResponse_Ok {
	if x, ok := m.GetData().(*ClientControllerHandshakeResponse_Ok_); ok {
		return x.Ok
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ClientControllerHandshakeResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ClientControllerHandshakeResponse_Error)(nil),
		(*ClientControllerHandshakeResponse_Ok_)(nil),
	}
}

type ClientControllerHandshakeResponse_Ok struct {
	Timestep             int32    `protobuf:"varint,1,opt,name=timestep,proto3" json:"timestep,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientControllerHandshakeResponse_Ok) Reset()         { *m = ClientControllerHandshakeResponse_Ok{} }
func (m *ClientControllerHandshakeResponse_Ok) String() string { return proto.CompactTextString(m) }
func (*ClientControllerHandshakeResponse_Ok) ProtoMessage()    {}
func (*ClientControllerHandshakeResponse_Ok) Descriptor() ([]byte, []int) {
	return fileDescriptor_c26ef4dddf97e5c1, []int{1, 0}
}

func (m *ClientControllerHandshakeResponse_Ok) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientControllerHandshakeResponse_Ok.Unmarshal(m, b)
}
func (m *ClientControllerHandshakeResponse_Ok) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientControllerHandshakeResponse_Ok.Marshal(b, m, deterministic)
}
func (m *ClientControllerHandshakeResponse_Ok) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientControllerHandshakeResponse_Ok.Merge(m, src)
}
func (m *ClientControllerHandshakeResponse_Ok) XXX_Size() int {
	return xxx_messageInfo_ClientControllerHandshakeResponse_Ok.Size(m)
}
func (m *ClientControllerHandshakeResponse_Ok) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientControllerHandshakeResponse_Ok.DiscardUnknown(m)
}

var xxx_messageInfo_ClientControllerHandshakeResponse_Ok proto.InternalMessageInfo

func (m *ClientControllerHandshakeResponse_Ok) GetTimestep() int32 {
	if m != nil {
		return m.Timestep
	}
	return 0
}

type ClientControllerBound struct {
	IsSync               bool       `protobuf:"varint,1,opt,name=is_sync,json=isSync,proto3" json:"is_sync,omitempty"`
	RobotInfo            *RobotInfo `protobuf:"bytes,2,opt,name=robot_info,json=robotInfo,proto3" json:"robot_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClientControllerBound) Reset()         { *m = ClientControllerBound{} }
func (m *ClientControllerBound) String() string { return proto.CompactTextString(m) }
func (*ClientControllerBound) ProtoMessage()    {}
func (*ClientControllerBound) Descriptor() ([]byte, []int) {
	return fileDescriptor_c26ef4dddf97e5c1, []int{2}
}

func (m *ClientControllerBound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientControllerBound.Unmarshal(m, b)
}
func (m *ClientControllerBound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientControllerBound.Marshal(b, m, deterministic)
}
func (m *ClientControllerBound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientControllerBound.Merge(m, src)
}
func (m *ClientControllerBound) XXX_Size() int {
	return xxx_messageInfo_ClientControllerBound.Size(m)
}
func (m *ClientControllerBound) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientControllerBound.DiscardUnknown(m)
}

var xxx_messageInfo_ClientControllerBound proto.InternalMessageInfo

func (m *ClientControllerBound) GetIsSync() bool {
	if m != nil {
		return m.IsSync
	}
	return false
}

func (m *ClientControllerBound) GetRobotInfo() *RobotInfo {
	if m != nil {
		return m.RobotInfo
	}
	return nil
}

type ClientControllerUnbound struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientControllerUnbound) Reset()         { *m = ClientControllerUnbound{} }
func (m *ClientControllerUnbound) String() string { return proto.CompactTextString(m) }
func (*ClientControllerUnbound) ProtoMessage()    {}
func (*ClientControllerUnbound) Descriptor() ([]byte, []int) {
	return fileDescriptor_c26ef4dddf97e5c1, []int{3}
}

func (m *ClientControllerUnbound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientControllerUnbound.Unmarshal(m, b)
}
func (m *ClientControllerUnbound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientControllerUnbound.Marshal(b, m, deterministic)
}
func (m *ClientControllerUnbound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientControllerUnbound.Merge(m, src)
}
func (m *ClientControllerUnbound) XXX_Size() int {
	return xxx_messageInfo_ClientControllerUnbound.Size(m)
}
func (m *ClientControllerUnbound) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientControllerUnbound.DiscardUnknown(m)
}

var xxx_messageInfo_ClientControllerUnbound proto.InternalMessageInfo

type ClientControllerMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientControllerMessage) Reset()         { *m = ClientControllerMessage{} }
func (m *ClientControllerMessage) String() string { return proto.CompactTextString(m) }
func (*ClientControllerMessage) ProtoMessage()    {}
func (*ClientControllerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c26ef4dddf97e5c1, []int{4}
}

func (m *ClientControllerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientControllerMessage.Unmarshal(m, b)
}
func (m *ClientControllerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientControllerMessage.Marshal(b, m, deterministic)
}
func (m *ClientControllerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientControllerMessage.Merge(m, src)
}
func (m *ClientControllerMessage) XXX_Size() int {
	return xxx_messageInfo_ClientControllerMessage.Size(m)
}
func (m *ClientControllerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientControllerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientControllerMessage proto.InternalMessageInfo

type ClientControllerMessage_ControllerMessage struct {
	// Types that are valid to be assigned to Message:
	//	*ClientControllerMessage_ControllerMessage_ClientControllerHandshake
	//	*ClientControllerMessage_ControllerMessage_Pong
	//	*ClientControllerMessage_ControllerMessage_Commands
	Message              isClientControllerMessage_ControllerMessage_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *ClientControllerMessage_ControllerMessage) Reset() {
	*m = ClientControllerMessage_ControllerMessage{}
}
func (m *ClientControllerMessage_ControllerMessage) String() string { return proto.CompactTextString(m) }
func (*ClientControllerMessage_ControllerMessage) ProtoMessage()    {}
func (*ClientControllerMessage_ControllerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c26ef4dddf97e5c1, []int{4, 0}
}

func (m *ClientControllerMessage_ControllerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientControllerMessage_ControllerMessage.Unmarshal(m, b)
}
func (m *ClientControllerMessage_ControllerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientControllerMessage_ControllerMessage.Marshal(b, m, deterministic)
}
func (m *ClientControllerMessage_ControllerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientControllerMessage_ControllerMessage.Merge(m, src)
}
func (m *ClientControllerMessage_ControllerMessage) XXX_Size() int {
	return xxx_messageInfo_ClientControllerMessage_ControllerMessage.Size(m)
}
func (m *ClientControllerMessage_ControllerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientControllerMessage_ControllerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientControllerMessage_ControllerMessage proto.InternalMessageInfo

type isClientControllerMessage_ControllerMessage_Message interface {
	isClientControllerMessage_ControllerMessage_Message()
}

type ClientControllerMessage_ControllerMessage_ClientControllerHandshake struct {
	ClientControllerHandshake *ClientControllerHandshake `protobuf:"bytes,1,opt,name=client_controller_handshake,json=clientControllerHandshake,proto3,oneof"`
}

type ClientControllerMessage_ControllerMessage_Pong struct {
	Pong *Pong `protobuf:"bytes,2,opt,name=pong,proto3,oneof"`
}

type ClientControllerMessage_ControllerMessage_Commands struct {
	Commands *Commands `protobuf:"bytes,3,opt,name=commands,proto3,oneof"`
}

func (*ClientControllerMessage_ControllerMessage_ClientControllerHandshake) isClientControllerMessage_ControllerMessage_Message() {
}

func (*ClientControllerMessage_ControllerMessage_Pong) isClientControllerMessage_ControllerMessage_Message() {
}

func (*ClientControllerMessage_ControllerMessage_Commands) isClientControllerMessage_ControllerMessage_Message() {
}

func (m *ClientControllerMessage_ControllerMessage) GetMessage() isClientControllerMessage_ControllerMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ClientControllerMessage_ControllerMessage) GetClientControllerHandshake() *ClientControllerHandshake {
	if x, ok := m.GetMessage().(*ClientControllerMessage_ControllerMessage_ClientControllerHandshake); ok {
		return x.ClientControllerHandshake
	}
	return nil
}

func (m *ClientControllerMessage_ControllerMessage) GetPong() *Pong {
	if x, ok := m.GetMessage().(*ClientControllerMessage_ControllerMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

func (m *ClientControllerMessage_ControllerMessage) GetCommands() *Commands {
	if x, ok := m.GetMessage().(*ClientControllerMessage_ControllerMessage_Commands); ok {
		return x.Commands
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ClientControllerMessage_ControllerMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ClientControllerMessage_ControllerMessage_ClientControllerHandshake)(nil),
		(*ClientControllerMessage_ControllerMessage_Pong)(nil),
		(*ClientControllerMessage_ControllerMessage_Commands)(nil),
	}
}

type ClientControllerMessage_ServerMessage struct {
	// Types that are valid to be assigned to Message:
	//	*ClientControllerMessage_ServerMessage_ClientControllerHandshakeResponse
	//	*ClientControllerMessage_ServerMessage_Ping
	//	*ClientControllerMessage_ServerMessage_SimStateChange
	//	*ClientControllerMessage_ServerMessage_SensorData
	//	*ClientControllerMessage_ServerMessage_ClientControllerBound
	//	*ClientControllerMessage_ServerMessage_ClientControllerUnbound
	Message              isClientControllerMessage_ServerMessage_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *ClientControllerMessage_ServerMessage) Reset()         { *m = ClientControllerMessage_ServerMessage{} }
func (m *ClientControllerMessage_ServerMessage) String() string { return proto.CompactTextString(m) }
func (*ClientControllerMessage_ServerMessage) ProtoMessage()    {}
func (*ClientControllerMessage_ServerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c26ef4dddf97e5c1, []int{4, 1}
}

func (m *ClientControllerMessage_ServerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientControllerMessage_ServerMessage.Unmarshal(m, b)
}
func (m *ClientControllerMessage_ServerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientControllerMessage_ServerMessage.Marshal(b, m, deterministic)
}
func (m *ClientControllerMessage_ServerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientControllerMessage_ServerMessage.Merge(m, src)
}
func (m *ClientControllerMessage_ServerMessage) XXX_Size() int {
	return xxx_messageInfo_ClientControllerMessage_ServerMessage.Size(m)
}
func (m *ClientControllerMessage_ServerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientControllerMessage_ServerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientControllerMessage_ServerMessage proto.InternalMessageInfo

type isClientControllerMessage_ServerMessage_Message interface {
	isClientControllerMessage_ServerMessage_Message()
}

type ClientControllerMessage_ServerMessage_ClientControllerHandshakeResponse struct {
	ClientControllerHandshakeResponse *ClientControllerHandshakeResponse `protobuf:"bytes,1,opt,name=client_controller_handshake_response,json=clientControllerHandshakeResponse,proto3,oneof"`
}

type ClientControllerMessage_ServerMessage_Ping struct {
	Ping *Ping `protobuf:"bytes,2,opt,name=ping,proto3,oneof"`
}

type ClientControllerMessage_ServerMessage_SimStateChange struct {
	SimStateChange *SimState `protobuf:"bytes,3,opt,name=sim_state_change,json=simStateChange,proto3,oneof"`
}

type ClientControllerMessage_ServerMessage_SensorData struct {
	SensorData *SensorsData `protobuf:"bytes,4,opt,name=sensor_data,json=sensorData,proto3,oneof"`
}

type ClientControllerMessage_ServerMessage_ClientControllerBound struct {
	ClientControllerBound *ClientControllerBound `protobuf:"bytes,5,opt,name=client_controller_bound,json=clientControllerBound,proto3,oneof"`
}

type ClientControllerMessage_ServerMessage_ClientControllerUnbound struct {
	ClientControllerUnbound *ClientControllerUnbound `protobuf:"bytes,6,opt,name=client_controller_unbound,json=clientControllerUnbound,proto3,oneof"`
}

func (*ClientControllerMessage_ServerMessage_ClientControllerHandshakeResponse) isClientControllerMessage_ServerMessage_Message() {
}

func (*ClientControllerMessage_ServerMessage_Ping) isClientControllerMessage_ServerMessage_Message() {}

func (*ClientControllerMessage_ServerMessage_SimStateChange) isClientControllerMessage_ServerMessage_Message() {
}

func (*ClientControllerMessage_ServerMessage_SensorData) isClientControllerMessage_ServerMessage_Message() {
}

func (*ClientControllerMessage_ServerMessage_ClientControllerBound) isClientControllerMessage_ServerMessage_Message() {
}

func (*ClientControllerMessage_ServerMessage_ClientControllerUnbound) isClientControllerMessage_ServerMessage_Message() {
}

func (m *ClientControllerMessage_ServerMessage) GetMessage() isClientControllerMessage_ServerMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ClientControllerMessage_ServerMessage) GetClientControllerHandshakeResponse() *ClientControllerHandshakeResponse {
	if x, ok := m.GetMessage().(*ClientControllerMessage_ServerMessage_ClientControllerHandshakeResponse); ok {
		return x.ClientControllerHandshakeResponse
	}
	return nil
}

func (m *ClientControllerMessage_ServerMessage) GetPing() *Ping {
	if x, ok := m.GetMessage().(*ClientControllerMessage_ServerMessage_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *ClientControllerMessage_ServerMessage) GetSimStateChange() *SimState {
	if x, ok := m.GetMessage().(*ClientControllerMessage_ServerMessage_SimStateChange); ok {
		return x.SimStateChange
	}
	return nil
}

func (m *ClientControllerMessage_ServerMessage) GetSensorData() *SensorsData {
	if x, ok := m.GetMessage().(*ClientControllerMessage_ServerMessage_SensorData); ok {
		return x.SensorData
	}
	return nil
}

func (m *ClientControllerMessage_ServerMessage) GetClientControllerBound() *ClientControllerBound {
	if x, ok := m.GetMessage().(*ClientControllerMessage_ServerMessage_ClientControllerBound); ok {
		return x.ClientControllerBound
	}
	return nil
}

func (m *ClientControllerMessage_ServerMessage) GetClientControllerUnbound() *ClientControllerUnbound {
	if x, ok := m.GetMessage().(*ClientControllerMessage_ServerMessage_ClientControllerUnbound); ok {
		return x.ClientControllerUnbound
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ClientControllerMessage_ServerMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ClientControllerMessage_ServerMessage_ClientControllerHandshakeResponse)(nil),
		(*ClientControllerMessage_ServerMessage_Ping)(nil),
		(*ClientControllerMessage_ServerMessage_SimStateChange)(nil),
		(*ClientControllerMessage_ServerMessage_SensorData)(nil),
		(*ClientControllerMessage_ServerMessage_ClientControllerBound)(nil),
		(*ClientControllerMessage_ServerMessage_ClientControllerUnbound)(nil),
	}
}

func init() {
	proto.RegisterType((*ClientControllerHandshake)(nil), "erebus.ClientControllerHandshake")
	proto.RegisterType((*ClientControllerHandshakeResponse)(nil), "erebus.ClientControllerHandshakeResponse")
	proto.RegisterType((*ClientControllerHandshakeResponse_Ok)(nil), "erebus.ClientControllerHandshakeResponse.Ok")
	proto.RegisterType((*ClientControllerBound)(nil), "erebus.ClientControllerBound")
	proto.RegisterType((*ClientControllerUnbound)(nil), "erebus.ClientControllerUnbound")
	proto.RegisterType((*ClientControllerMessage)(nil), "erebus.ClientControllerMessage")
	proto.RegisterType((*ClientControllerMessage_ControllerMessage)(nil), "erebus.ClientControllerMessage.ControllerMessage")
	proto.RegisterType((*ClientControllerMessage_ServerMessage)(nil), "erebus.ClientControllerMessage.ServerMessage")
}

func init() { proto.RegisterFile("client_controller.proto", fileDescriptor_c26ef4dddf97e5c1) }

var fileDescriptor_c26ef4dddf97e5c1 = []byte{
	// 566 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x8f, 0x12, 0x31,
	0x18, 0x9e, 0x61, 0xf9, 0x7c, 0xd9, 0x35, 0x6c, 0xcd, 0xca, 0x80, 0x31, 0x0b, 0x13, 0x0f, 0x98,
	0xe8, 0x64, 0xc5, 0xc4, 0x93, 0xf1, 0x00, 0x1e, 0xc6, 0x83, 0xae, 0x29, 0x31, 0x9e, 0xcc, 0xa4,
	0x94, 0x2e, 0x34, 0x30, 0x2d, 0xb6, 0xc5, 0x64, 0x13, 0x6f, 0xfe, 0x16, 0x7f, 0x93, 0x57, 0xcf,
	0xfe, 0x0a, 0x33, 0x9d, 0x82, 0xca, 0x87, 0x78, 0xeb, 0xfb, 0xf5, 0x3c, 0x7d, 0xda, 0xa7, 0x85,
	0x26, 0x5d, 0x70, 0x26, 0x4c, 0x42, 0xa5, 0x30, 0x4a, 0x2e, 0x16, 0x4c, 0x45, 0x4b, 0x25, 0x8d,
	0x44, 0x65, 0xa6, 0xd8, 0x78, 0xa5, 0xdb, 0x35, 0xcd, 0xd3, 0x3c, 0xd5, 0x3e, 0xd3, 0x4c, 0x6b,
	0x2e, 0x45, 0x1e, 0x86, 0x09, 0xb4, 0x86, 0x76, 0x78, 0xb8, 0x99, 0x8d, 0x89, 0x98, 0xe8, 0x19,
	0x99, 0x33, 0x74, 0x09, 0x75, 0x87, 0x2c, 0x48, 0xca, 0x02, 0xbf, 0xe3, 0xf7, 0x6a, 0x18, 0xf2,
	0xd4, 0x5b, 0x92, 0x32, 0xd4, 0x85, 0x53, 0xc5, 0x3e, 0xad, 0x98, 0x36, 0x89, 0xbe, 0x15, 0x34,
	0x28, 0x74, 0xfc, 0x5e, 0x15, 0xd7, 0x5d, 0x6e, 0x74, 0x2b, 0x68, 0xf8, 0xcd, 0x87, 0xee, 0x41,
	0x06, 0xcc, 0xf4, 0x52, 0x0a, 0xcd, 0xd0, 0x3d, 0x28, 0x31, 0xa5, 0xa4, 0xca, 0x39, 0x62, 0x0f,
	0xe7, 0x21, 0x7a, 0x09, 0x05, 0x39, 0xb7, 0xb0, 0xf5, 0xfe, 0xe3, 0x28, 0x57, 0x13, 0x1d, 0x85,
	0x8b, 0xae, 0xe7, 0xb1, 0x87, 0x0b, 0x72, 0xde, 0xee, 0x40, 0xe1, 0x7a, 0x8e, 0xda, 0x50, 0x35,
	0x3c, 0x65, 0xda, 0xb0, 0xa5, 0x25, 0x28, 0xe1, 0x4d, 0x3c, 0x28, 0x43, 0x71, 0x42, 0x0c, 0x09,
	0xc7, 0x70, 0xb1, 0x8d, 0x3b, 0x90, 0x2b, 0x31, 0x41, 0x4d, 0xa8, 0x70, 0x9d, 0xcb, 0xf3, 0xad,
	0xbc, 0x32, 0xd7, 0x99, 0x32, 0x74, 0x05, 0xa0, 0xe4, 0x58, 0x9a, 0x84, 0x8b, 0x1b, 0xe9, 0xf6,
	0x78, 0xbe, 0xde, 0x23, 0xce, 0x2a, 0xaf, 0xc5, 0x8d, 0xc4, 0x35, 0xb5, 0x5e, 0x86, 0x2d, 0x68,
	0x6e, 0x73, 0xbc, 0x17, 0xe3, 0x8c, 0x25, 0xfc, 0x51, 0xda, 0xad, 0xbd, 0x61, 0x5a, 0x93, 0x29,
	0x6b, 0x7f, 0xf7, 0xe1, 0x7c, 0x27, 0x8b, 0x28, 0xdc, 0xdf, 0xb9, 0xf6, 0x64, 0xb6, 0x3e, 0x0a,
	0xbb, 0xd7, 0x7a, 0xbf, 0x7b, 0xf4, 0xcc, 0x62, 0x0f, 0xb7, 0xe8, 0x41, 0x07, 0x84, 0x50, 0x5c,
	0x4a, 0x31, 0x75, 0xea, 0x4e, 0xd7, 0x68, 0xef, 0xa4, 0x98, 0xc6, 0x1e, 0xb6, 0x35, 0x14, 0x41,
	0x95, 0xca, 0x34, 0xcd, 0x66, 0x82, 0x13, 0xdb, 0xd7, 0xd8, 0xb0, 0xba, 0x7c, 0xec, 0xe1, 0x4d,
	0xcf, 0xa0, 0x06, 0x95, 0xd4, 0x29, 0xfb, 0x79, 0x02, 0x67, 0x23, 0xa6, 0x3e, 0xff, 0x56, 0xf5,
	0x05, 0x1e, 0xfe, 0x43, 0x55, 0xa2, 0xdc, 0x0d, 0x3b, 0x79, 0x8f, 0xfe, 0xdb, 0x12, 0xb1, 0x87,
	0xbb, 0xf4, 0xa8, 0x0d, 0x33, 0xb9, 0x7c, 0x8f, 0x5c, 0xee, 0xe4, 0x72, 0x31, 0x45, 0x2f, 0xa0,
	0xa1, 0x79, 0x9a, 0x68, 0x43, 0x0c, 0x4b, 0xe8, 0x8c, 0x88, 0x29, 0xdb, 0x96, 0x3d, 0xe2, 0xe9,
	0x28, 0x2b, 0xc7, 0x1e, 0xbe, 0xa3, 0xdd, 0x7a, 0x68, 0x3b, 0xd1, 0x73, 0xa8, 0x6b, 0x26, 0xb4,
	0x54, 0x49, 0xe6, 0xba, 0xa0, 0x68, 0x07, 0xef, 0x6e, 0x06, 0x6d, 0x49, 0xbf, 0x22, 0x86, 0xc4,
	0x1e, 0x86, 0xbc, 0x33, 0x8b, 0xd0, 0x87, 0x3d, 0x8f, 0x3c, 0xb1, 0xd6, 0x09, 0x4a, 0x16, 0xe3,
	0xc1, 0xa1, 0xa3, 0xb0, 0x2e, 0x8e, 0x3d, 0x7c, 0x41, 0xf7, 0xda, 0xfb, 0x23, 0xb4, 0x76, 0x81,
	0x57, 0xb9, 0x2b, 0x83, 0xb2, 0x85, 0xbe, 0x3c, 0x04, 0xed, 0xcc, 0x1b, 0x7b, 0xb8, 0x49, 0xf7,
	0x97, 0xfe, 0xb8, 0xec, 0xfe, 0x57, 0x1f, 0x1a, 0xdb, 0x08, 0x48, 0x42, 0x65, 0x94, 0x7f, 0x48,
	0xe8, 0xe9, 0x21, 0x1a, 0xe7, 0x8d, 0x68, 0xf7, 0x65, 0x3c, 0x39, 0x36, 0xf2, 0x97, 0xb9, 0x7a,
	0xfe, 0x95, 0x3f, 0x2e, 0xdb, 0x7f, 0xef, 0xd9, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x62, 0x3e,
	0xee, 0xfb, 0x34, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClientControllerClient is the client API for ClientController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientControllerClient interface {
	Session(ctx context.Context, opts ...grpc.CallOption) (ClientController_SessionClient, error)
}

type clientControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewClientControllerClient(cc grpc.ClientConnInterface) ClientControllerClient {
	return &clientControllerClient{cc}
}

func (c *clientControllerClient) Session(ctx context.Context, opts ...grpc.CallOption) (ClientController_SessionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ClientController_serviceDesc.Streams[0], "/erebus.ClientController/Session", opts...)
	if err != nil {
		return nil, err
	}
	x := &clientControllerSessionClient{stream}
	return x, nil
}

type ClientController_SessionClient interface {
	Send(*ClientControllerMessage_ControllerMessage) error
	Recv() (*ClientControllerMessage_ServerMessage, error)
	grpc.ClientStream
}

type clientControllerSessionClient struct {
	grpc.ClientStream
}

func (x *clientControllerSessionClient) Send(m *ClientControllerMessage_ControllerMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *clientControllerSessionClient) Recv() (*ClientControllerMessage_ServerMessage, error) {
	m := new(ClientControllerMessage_ServerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ClientControllerServer is the server API for ClientController service.
type ClientControllerServer interface {
	Session(ClientController_SessionServer) error
}

// UnimplementedClientControllerServer can be embedded to have forward compatible implementations.
type UnimplementedClientControllerServer struct {
}

func (*UnimplementedClientControllerServer) Session(srv ClientController_SessionServer) error {
	return status.Errorf(codes.Unimplemented, "method Session not implemented")
}

func RegisterClientControllerServer(s *grpc.Server, srv ClientControllerServer) {
	s.RegisterService(&_ClientController_serviceDesc, srv)
}

func _ClientController_Session_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ClientControllerServer).Session(&clientControllerSessionServer{stream})
}

type ClientController_SessionServer interface {
	Send(*ClientControllerMessage_ServerMessage) error
	Recv() (*ClientControllerMessage_ControllerMessage, error)
	grpc.ServerStream
}

type clientControllerSessionServer struct {
	grpc.ServerStream
}

func (x *clientControllerSessionServer) Send(m *ClientControllerMessage_ServerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *clientControllerSessionServer) Recv() (*ClientControllerMessage_ControllerMessage, error) {
	m := new(ClientControllerMessage_ControllerMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ClientController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "erebus.ClientController",
	HandlerType: (*ClientControllerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Session",
			Handler:       _ClientController_Session_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "client_controller.proto",
}
